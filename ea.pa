/#EA#

/ DELETE FORWARD
DELFWD,	0
	TAD [POINT		/ AT END (POINT == BUFEND)?
	MQL
	TAD [BUFEND
	JMS SNE15
	JMP I DELFWD
	ISZ DELFWD

	TAD [POINT		/ NO, JUST INCREMENT POINY
	JMS INC15
	STA
	DCA CHANGD

	JMP I DELFWD

/ DELETE REVERSE
DELREV,	0			/ BACK ONE AND THEN DELETE FORWARD
	JMS BACK
	JMP I DELREV
	JMS DELFWD
	HLT
	ISZ DELREV
	JMP I DELREV

/ BEGINNING OF BUFFER. ASSUME BUFFER STARTS AT ADDRESS 0 IN SOME FIELD.
GOBEG,	0
	DCA SRCHP		/ SRCHP = BEGINNING OF BUFFE
	TAD [BUFFLD
	DCA SRCHP+1
	JMS GOREV		/ GO THERE
	ISZ GOBEG
	JMP I GOBEG

/ END OF BUFFER. ASSUME BUFFER ENDS AT ADDRESS 0 IN SOME FIELD
/ (INCLUDING IMAGINARY FIELD 10)
GOEND,	0
	DCA SRCHP		/ SRCHP = END OF BUFFER
	TAD [ENDFLD
	DCA SRCHP+1
	JMS GOFWD		/ GO THERE
	ISZ GOEND
	JMP I GOEND

 	PAGE	/------------ 1200

/ END OF LINE
ENDLN,	0
	ISZ ENDLN		/ CAN'T FAIL
	JMS SFWDPT		/ SEARCH FORWARD FOR NL
	TAD [NL
	JMS SFWD
	JMP ENDLNA
	JMS GOFWD		/ FOUND GO THERE
	JMP I ENDLN
ENDLNA,	JMS GOEND		/ NOT FOUND, GO TO END
	HLT 			/ CAN'T FAIL
	JMP I ENDLN
	
/ NEXT LINE
NXTLN,	0
	JMS SFWDPT		/ SEARCH FORWARD FOR NL
	TAD [NL
	JMS SFWD
	JMP I NXTLN
	TAD [SRCHP		/ SKIP OVER NL
	JMS INC15
	JMS GOFWD		/ GO THERE
	ISZ NXTLN
	JMP I NXTLN

/ BEGINNING OF LINE
BEGLN,	0
	ISZ BEGLN		/ CAN'T FAIL
	JMS SREVGP		/ SEARCH BACK FOR NL
	TAD [NL
	JMS SREV
	JMP BEGLNA
	TAD [SRCHP		/ SKIP OVER NL
	JMS INC15
	JMS GOREV		/ GO THERE
	JMP I BEGLN
BEGLNA,	JMS GOBEG		/ NOT FOUND, GO TO BEGINNING
	HLT
	JMP I BEGLN

/ PREVIOUS LINE
PRVLN,	0
	JMS SREVGP		/ SEARCH REVERSE FOR NL
	TAD [NL
	JMS SREV
	JMP I PRVLN
	JMS GOREV		/ GO THERE
	JMS BEGLN		/ THEN TO BEGINNING OF THAT LINE
	HLT
	ISZ PRVLN
	JMP I PRVLN

/ SEARCH FORWARD FROM SRCHP FOR CHAR IN AC. IF FOUND UPDATE SRCHP
/ AND SKIP. SRCHP >= POINT. FOR SPEED, DON'T USE 15-BIT ADDRESS
/ SUBROUTINES
SFWD,	0
	CIA
	DCA SRCHC
	TAD SRCHP+1
	DCA SFWDF

SFWDA,	TAD SRCHP	/ DONE (SRCHP == BUFEND)?
	SZA CLA
	JMP SFWDF
	TAD SFWDF
	TAD [-ENDFLD
	SNA CLA
	JMP SFWDC
	
SFWDF,	0		/ NOT DONE, MATCH?
	TAD I SRCHP
	TAD SRCHC
	SNA CLA
	JMP SFWDB
	ISZ SRCHP	/ NO MATCH, SRCHP++
	JMP SFWDA
	TAD SFWDF
	TAD [10
	DCA SFWDF
	JMP SFWDA

SFWDB,	TAD SFWDF	/ MATCH, STORE FINAL FIELD
	DCA SRCHP+1
	ISZ SFWD
SFWDC,	CODFLD
	JMP I SFWD

/ SEARCH REVERSE FROM SRCHP-1 FOR CHAR IN AC. IF FOUND UPDATE SRCHP
/ AND SKIP. SRCHP <= GAP. FOR SPEED, DON'T USE 15-BIT ADDRESS
/ SUBROUTINES
SREV,	0
	CIA
	DCA SRCHC
	TAD SRCHP+1
	DCA SREVF

SREVA,	TAD SRCHP	/ DONE (SRCHP == BUF)
	SZA CLA
	JMP SREVC
	TAD SREVF
	TAD [-BUFFLD
	SNA CLA
	JMP SREVD
	
SREVC,	STA STL		/ NOT DONE, --SRCHP
	TAD SRCHP
	DCA SRCHP
	SNL CLA
	JMP SREVF
	TAD SREVF
	TAD [-10
	DCA SREVF

SREVF,	0		/ MATCH?
	TAD I SRCHP
	TAD SRCHC
	SZA CLA
	JMP SREVA

SREVB,	TAD SREVF	/ YES
	DCA SRCHP+1
	ISZ SREV
SREVD,	CODFLD
	JMP I SREV

 	PAGE	/------------ 1400

/ SET UP TO SEARCH FORWARD FROM POINT
SFWDPT,	0
	TAD POINT
	DCA SRCHP
	TAD POINT+1
	DCA SRCHP+1
	JMP I SFWDPT

/ SET UP TO SEARCH REVERSE FROM GAP
SREVGP,	0
	TAD GAP
	DCA SRCHP
	TAD GAP+1
	DCA SRCHP+1
	JMP I SREVGP

/ GO FORWARD FROM POINT TO SRCHP. POINT <= SRCHP <= BUFEND.
/ THIS IS POTENTIALLY THE SLOWEST EDIT OPERATION, SINCE IT
/ CAN MOVE LOTS OF CHARACTERS, SO DON'T USE 15-BIT ADDRESS
/ SUBROUTINES
GOFWD,	0
	TAD SRCHP		/ GET -STOP ADDRESS
	CIA
	DCA GOSTOP
	TAD SRCHP+1
	CIA
	DCA GOSTOP+1
 
	TAD POINT+1		/ SET UP CDF INSTRUCTIONS
	DCA GOFWDP
	TAD GAP+1
	DCA GOFWDG

GOFWDA,	TAD POINT		/ AT STOP POINT?
	TAD GOSTOP
	SZA CLA
	JMP GOFWDP
	TAD GOFWDP
	TAD GOSTOP+1
	SZA CLA
	JMP GOFWDP
	
	CODFLD			/ YES, UPDATE POINT AND GAP
	TAD GOFWDP		
	DCA POINT+1
	TAD GOFWDG
	DCA GAP+1
	JMP I GOFWD		/ AND DONE

GOFWDP,	0     			/ MOVE CHAR FROM POINT TO GAP
	TAD I POINT
GOFWDG,	0
	DCA I GAP

	ISZ POINT		/ ++POINT
	JMP GOFWDB
	TAD GOFWDP
	TAD [10
	DCA GOFWDP
GOFWDB,	ISZ GAP			/ ++GAP
	JMP GOFWDA
	TAD GOFWDG
	TAD [10
	DCA GOFWDG

	JMP GOFWDA		/ NEXT

/ GO BACKWARDS FROM GAP TO SRCHP. BUF <= SRCHP <= GAP
GOREV,	0
	TAD SRCHP		/ GET -STOP ADDRESS
	CIA
	DCA GOSTOP
	TAD SRCHP+1
	CIA
	DCA GOSTOP+1
	
	TAD POINT+1		/ SET UP CDF INSTRUCTIONS
	DCA GOREVP
	TAD GAP+1
	DCA GOREVG

GOREVA,	TAD GAP			/ AT STOP POINT?
	TAD GOSTOP
	SZA CLA
	JMP GOREVC
	TAD GOREVG
	TAD GOSTOP+1
	SZA CLA
	JMP GOREVC

	CODFLD			/ YES, UPDATE POINT AND GAP
	TAD GOREVP
	DCA POINT+1
	TAD GOREVG
	DCA GAP+1
	JMP I GOREV		/ DONE

GOREVC,	STA STL			/ --POINT
	TAD POINT
	DCA POINT
	SNL
	JMP GOREVB
	TAD GOREVP
	TAD [-10
	DCA GOREVP

GOREVB,	STA STL			/ --GAP
	TAD GAP
	DCA GAP
	SNL
	JMP GOREVG
	TAD GOREVG
	TAD [-10
	DCA GOREVG

GOREVG,	0			/ MOVE CHAR FROM GAP TO POINT
	TAD I GAP
GOREVP,	0
	DCA I POINT
	JMP GOREVA

/ COMPUTE NUMBER OF CHARS IN BUFFER, PUT IN AC24
BUFSIZ,	0
	TAD [BUFEND
	JMS LD24
	TAD [BUF
	JMS SUB24
	TAD [POINT
	JMS SUB24
	TAD [GAP
	JMS ADD24
	JMS FIX24
	JMP I BUFSIZ

