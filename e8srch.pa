/#EF# REGIONS, SEARCH

/ SAVE (CLIP.E8) AND DELETE REGION
DELREG,	0
	JMS WRREG		/ SAVE IT
	JMP I DELREG
	ISZ DELREG
	STA			/ BUFFER IS GOING TO CHANGE
	DCA CHANGD
	
	TAD MKFLAG		/ MARK BEFORE OR AFTER POINT?
	SZA CLA
	JMP DLRGA

	TAD MARK		/ BEFORE, GAP = MARK
	DCA GAP
	TAD MARK+1
	DCA GAP+1
	JMP I DELREG

DLRGA,	TAD MARK		/ AFTER, POINT = MAK
	DCA POINT
	TAD MARK+1
	DCA POINT+1
	JMP I DELREG

	PAGE  /-------------------------- 4600

/ WRITE REGION AND SKIP IF NOT EMPTY.
WRREG,	0
	TAD MKFLAG
	SZA CLA
	JMP WRREGA

	TAD [MARK		/ MARK BEFORE GAP, NULL REGION?
	MQL
	TAD [GAP
	JMS SNE15
	JMP WRREGN

	TAD [MARK		/ NO, WRITE BEFORE GAP
	DCA WRBEG
	TAD [POINT
	DCA WREND
	JMP WRREGB

WRREGA,	TAD [MARK		/ MARK AFTER POINT, NULL REGION?
	MQL
	TAD [POINT
	JMS SNE15
	JMP WRREGN

	TAD [GAP		/ NO, WRITE AFTER POINT
	DCA WRBEG
	TAD [MARK
	DCA WREND

WRREGB,	TAD (TEMPFN		/ WRITE TO CLIP.E8
	DCA WRNAME
	JMS WRITEF
	SKP
	ISZ WRREG
	JMP I WRREG

WRREGN,	TAD (NRMSG		/ NULL REGION, SHOW MESAGE
	JMS WR6
	WRMLT
	ISZ MLHOLD
	JMP I WRREG

TEMPFN,	FILENAME CLIP.E8

/ INSERT SAVED REGION
YANK,	0
	TAD (TEMPFN		/ LOOK FOR IT
	JMS LUFILE
	JMP I YANK
	JMS INSFIL		/ INSERT
	SKP
	ISZ YANK
	JMP I YANK

/ IF BUFFER FILLED WHEN READING, READ MORE
RDMORE,	0
	TAD MOREOK
	SNA CLA
	JMP I RDMORE

	STA
	TAD FILBLK
	DCA FILLOC
	JMS CLRBUF
	JMP I RDMORE
	JMS INSFIL
	NOP
	ISZ RDMORE
	JMP I RDMORE

/ INCREMENTAL SEARCH

/ LOOK FOR THE <0-TERMINATED SEARCH STRING. START AT SRCHP,
/ UPDATE AND SKIP IF FOUND. IF NOT FOUND SRCHP IS UNDEFINED
SCHSTR,	0
SCSTC,	TAD (SSTRNG
	DCA SCSTP

	TAD I SCSTP		/ NULL SEARCH STRING IS FOUND
	SPA CLA
	JMP SCSTB

	TAD I SCSTP		/ FIND FIRST CHAR OF STRING
	JMS SFWD
	JMP I SCHSTR

	TAD SRCHP
	DCA SCSTQ
	TAD SRCHP+1
	DCA SCSTQ+1

SCSTA,	ISZ SCSTP		/ ADVANCE POINTERS
	TAD (SCSTQ
	JMS INC15

	TAD I SCSTP		/ DONE?
	SPA CLA
	JMP SCSTB

	TAD (SCSTQ		/ END OF BUFFER?
	MQL
	TAD [BUFEND
	JMS SNE15
	JMP I SCHSTR

	TAD (SCSTQ		/ NO, COMPARE
	JMS GET15
	CIA
	TAD I SCSTP
	SNA CLA
	JMP SCSTA		/ MATCH, KEEP GOING
	
	TAD [SRCHP		/ NO MATCH, FIND NEXT PLACE TO LOOK
	JMS INC15
	JMP SCSTC

SCSTB,	ISZ SCHSTR		/ FOUND
	JMP I SCHSTR

SCSTP,	0			/ -> SEARCH STRING
SCSTQ,	0; 0			/ ->15 BUFFER

	PAGE  /-------------------------- 5000

/ INCREMENTAL SEARCH COMMAND
ISRCH,	0
	ISZ ISRCH		/ CAN'T FAIL
	JMS CLRMLT		/ PROMPT
	TAD (ISMSG
	JMS WR6
	WRMLT

	TAD (SSTRNG		/ INIT SEARCH STRING POINTER
	DCA ISP
	JMS SETPM		/ SET MARK TO STARTING POINT
ISD,	STA 			/ MARK EMPTY SEARCH STRING
	DCA I ISP

ISA,	JMS UPDATE
	JMS SFWDPT		/ START FROM POINT

ISC,	JMS RDTTY
	TAD [-BS		/ BACKSPACE?
	SNA
	JMP ISBS
	TAD (BS-6		/ ^F?
	SNA
	JMP ISNXT
	TAD (6-CR		/ CR?
	SNA
	JMP I ISRCH		/ CR, DONE
	TAD [CR			/ REGULAR CHAR
	DCA ISCH		/ SAVE IT

	TAD ISP			/ SEARCH STRING FULL?
	TAD (-SSEND+1
	SNA CLA
	JMP ISB

	TAD ISCH		/ PUT IN SEARCH STRING
	TAD (-16		/ CONVERT ^N TO CR
	SNA
	TAD (CR-16
	TAD (16
	DCA I ISP
	ISZ ISP
	STA			/ MARK END OF SEARCH STRING
	DCA I ISP

ISF,	JMS SCHSTR		/ LOOK FOR IT
	JMP ISNF

	JMS GOFWD		/ FOUND, GO THERE
	JMS FIXMRK
	TAD ISCH		/ ECHO IN MODE LINE	
	JMS WRMLT
	JMP ISA
	
ISBS,	TAD ISP			/ BACKUP. ALREADY AT BEGINNING?
	TAD (-SSTRNG
	SZA CLA
	JMP ISE
	TAD [BELL
	JMS WRTTY
	JMP ISC

ISE,	STA			/ NO, DEC POINTER
	TAD ISP
	DCA ISP
	STA
	DCA I ISP

	JMS EXGPM		/ BACK TO STARTING POINT
	HLT
	JMS SETPM		/ FIND SHORTER STRING
	JMS SFWDPT
	JMS SCHSTR
	HLT			/ MUST BE FOUND
	JMS GOFWD		/ GO THERE
	JMS FIXMRK
	JMS ERMLT		/ ERASE CHAR FROM MODE LINE
	JMP ISA

ISNXT,	TAD [SRCHP		/ FIND NEXT OCCURANCE
	MQL			/ AT END OF BUFFER?
	TAD [BUFEND
	JMS SNE15
	JMP ISB
	TAD [SRCHP		/ NO, ADVANCE 1
	JMS INC15
	JMS SCHSTR		/ FIND
	JMP ISB

	JMS GOFWD		/ GO THERE
	JMS FIXMRK
	JMP ISA
	
ISB,	TAD [BELL		/ NOT FOUND
	JMS WRTTY
	JMP ISA

ISNF,	TAD [BELL		/ NOT FOUND
	JMS WRTTY
	STA			/ REMOVE CHAR FROM SEARCH STRING
	TAD ISP
	DCA ISP
	JMP ISD
	
ISCH,	0	/ NEXT CHAR IN SEARCH STRING
ISP,	0	/ -> SEARCH STRING

	PAGE  /-------------------------- 5200
/ SEARCH AGAIN FOR LAST SEARCH STRING
SCHNXT,	0
	TAD SSTRNG		/ ANY STRING?
	SPA CLA
	JMP I SCHNXT

	JMS SFWDPT		/ YES, START AT POINT
	TAD [SRCHP		/ AT END OF BUFFER?
	MQL
	TAD [BUFEND
	JMS SNE15
	JMP I SCHNXT

	TAD [SRCHP		/ NO, SKIP 1
	JMS INC15

	JMS SCHSTR		/ LOOK FOR STRING
	JMP I SCHNXT

	JMS GOFWD		/ FOUND, GO THERE
	ISZ SCHNXT
	JMP I SCHNXT

/ MOVE SRCHP FORWARD ONE WORD FROM POINT
FWORD,	0
	JMS SFWDPT

/ SKIP OVER NON-ALPHANUMERIC
FWORDA,	TAD [SRCHP		/ AT END OF BUFFER?
	MQL
	TAD [BUFEND
	JMS SNE15
	JMP I FWORD
	TAD [SRCHP		/ NO, GET CHAR		
	JMS GET15
	JMS SKIPAN		/ ALPHANUMERIC?
	SKP
	JMP FWORDB
	TAD [SRCHP		/ NO, KEEP LOOKING
	JMS INC15
	JMP FWORDA

/ SKIP OVER ALPHANUMERIC
FWORDB,	TAD [SRCHP		/ ADVANCE ONE
	JMS INC15
	TAD [SRCHP		/ AT END OF BUFFER?
	MQL
	TAD [BUFEND
	JMS SNE15
	JMP FWORDC
	TAD [SRCHP		/ NO, GET CHAR
	JMS GET15
	JMS SKIPAN		/ ALPHANUMERIC?
	JMP FWORDC
	JMP FWORDB

FWORDC,	ISZ FWORD
	JMP I FWORD

/ MOVE SRCHP BACK ONE WORD FROM GAP
BWORD,	0
	JMS SREVGP

/ SKIP NON-ALPHANUMERIC
BWORDA,	TAD [SRCHP		/ AT BEGINNING OF BUFFER?
	MQL
	TAD [BUF
	JMS SNE15
	JMP I BWORD
	TAD [SRCHP		/ NO, BACK UP
	JMS DEC15
	TAD [SRCHP		/ GET CHAR		
	JMS GET15
	JMS SKIPAN		/ ALPHANUMERIC
	JMP BWORDA

/ SKIP OVER ALPHANUMERIC
BWORDB,	TAD [SRCHP		/ BACK ONE
	JMS DEC15
	TAD [SRCHP		/ AT BEGINNING OF BUFFER?
	MQL
	TAD [BUF
	JMS SNE15
	JMP BWORDC
	TAD [SRCHP		/ NO, GET CHAR
	JMS GET15
	JMS SKIPAN		/ ALPHANUMERIC?
	SKP
	JMP BWORDB

	TAD [SRCHP		/ NO, BACK TO A-N CHAR
	JMS INC15

BWORDC,	ISZ BWORD
	JMP I BWORD

/ MOVE POINT FORWARD ONE WORD
FWDWD,	0
	JMS FWORD
	JMP I FWDWD
	JMS GOFWD
	ISZ FWDWD
	JMP I FWDWD

/ MOVE POINT BACK ONE WORD
BACKWD,	0
	JMS BWORD
	JMP I BACKWD
	JMS GOREV
	ISZ BACKWD
	JMP I BACKWD

/ DELETE WORD FORWARD
DLFWWD,	0
	JMS FWORD
	JMP I DLFWWD
	TAD SRCHP
	DCA POINT
	TAD SRCHP+1
	DCA POINT+1
	STA
	DCA CHANGD
	ISZ DLFWWD
	JMP I DLFWWD

/ DELETE WORD REVERSE
DLRVWD,	0
	JMS BWORD
	JMP I DLRVWD
	TAD SRCHP
	DCA GAP
	TAD SRCHP+1
	DCA GAP+1
	STA
	DCA CHANGD
	ISZ DLRVWD
	JMP I DLRVWD
	
	PAGE  /-------------------------- 5400

NFMSG,	TEXT / NOT FOUND/
NEWMSG,	TEXT /NEW FILE/

INSE1,	TEXT /FATAL ERR/
INSE2,	TEXT /EOF?/		/ SHOULD BE IMPOSSIBLE, BUT ...

NOEMSG,	TEXT /ERR OPENING/
NOPMSG,	TEXT /ERR WRITING/
NOCMSG,	TEXT /ERR CLOSING/

MRKMSG,	TEXT /MARK SET/
NRMSG,	TEXT /NO REGION/

SAVMSG,	TEXT /SAVE? (Y, N, ^G):/
GFMSG,	TEXT /FILE: /
ISMSG,	TEXT /SEARCH: /
QRMSG1,	TEXT /REPLACE: /
QRMSG2,	TEXT / WITH: /
QRMSG3,	TEXT /REPLACED /

	PAGE  /-------------------------- 5600

/ MODE LINE TEXT (MLT) BUFFER
MLTBUF,	ZBLOCK 50
MLTEND,

/ SEARCH STRING BUFFER
SSTRNG,	-1		/ MARK EMPTY
	ZBLOCK 14	
SSEND,

/ REPLACE STRING BUFFER
RSTRNG,	-1		/ MARK EMPTY
	ZBLOCK 14
RSEND,
/#EG# QUERY REPLACE

/ GET SIZE OF AC->STRING, RETURN IN AC
STRSIZ,	0
	DCA SSIZP
	DCA SSIZN
SSIZA,	TAD I SSIZP
	ISZ SSIZP
	SPA CLA
	JMP SSIZB
	ISZ SSIZN
	JMP SSIZA
SSIZB,	TAD SSIZN
	JMP I STRSIZ

SSIZP,	0
SSIZN,	0

	PAGE	/------------------------- 6000

/ PROMPT AND READ INPUT FROM USER, SKIP IF NOT QUIT
/	JMS GETSTR
/	-> PROMPT
/	-> BUFFER
/	-> LAST ELEMENT OF BUFER
/	QUIT RETURN
GETSTR,	0
	TAD I GETSTR		/ PROMPT
	ISZ GETSTR	
	JMS WR6
	WRMLT
	JMS UPDATE

	TAD I GETSTR		/ FETCH BUFFER POINTERS
	ISZ GETSTR
	DCA GETSBF
	TAD GETSBF
	DCA GETSP
	TAD I GETSTR
	ISZ GETSTR
	CIA
	DCA GETSEN

	STA			/ MARK EMPTY
	DCA I GETSP

GETSA,	JMS RDTTY		/ GET AND PROCESS NEXT CHAR
	TAD [-BELL		/ QUIT?
	SNA
	JMP GETSQ
	TAD (BELL-CR		/ NO, END ENTRY?
	SNA
	JMP GETSX
	TAD (CR-10		/ NO, BACHSPACE?
	SNA
	JMP GETSBS
	TAD (10			/ ORDINARY CHARACTER
	DCA GETSCH

	TAD GETSP		/ ROOM FOR IT?
	TAD GETSEN
	SNA CLA
	JMP GETSER

	TAD GETSCH		/ YES, ECHO IT
	JMS WRMLT
	JMS UPDATE

	TAD GETSCH		/ PUT IN BUFFER
	TAD (-16		/ CONVERT ^N TO NL
	SNA
	TAD (NL-16
	TAD (16
	DCA I GETSP
	ISZ GETSP
	STA			/ MARK END
	DCA I GETSP
	JMP GETSA

GETSQ,	STA			/ QUIT, LEAVE BUFFER EMPTY
	DCA I GETSBF
	JMP I GETSTR

GETSER,	TAD [BELL		/ ERROR
	JMS WRTTY
	JMP GETSA

GETSBS,	TAD GETSBF		/ BACKSPACE, ALREADY AT BEGINNING?
	CIA
	TAD GETSP
	SNA CLA
	JMP GETSER

	STA			/ NO, BACKUP
	TAD GETSP
	DCA GETSP
	STA			/ MARK END
	DCA I GETSP
	JMS ERMLT		/ ERASE LAST CHAR
	JMS UPDATE
	JMP GETSA

GETSX,	ISZ GETSTR		/ NORMAL EXIT
	JMP I GETSTR

GETSP,	0	/ -> END MARKER AS CHARS ARE ENTERED
GETSBF,	0	/ -> BUFFER
GETSEN,	0	/ - ADDRESS OF LAST ELEMENT
GETSCH,	0	/ CHAR BEING INSERTED

	PAGE  /-------------------------- 6200

/ QUERY REPLACE
QREPL,	0
QRD,	JMS CLRMLT

	JMS GETSTR		/ GET SEARCH STRING
	QRMSG1
	SSTRNG
	SSEND-1
	JMP I QREPL

	TAD [SSTRNG		/ GET SIZE OF SEARCH STRING
	JMS STRSIZ
	SNA			/ IF EMPTY, TRY AGAIN
	JMP QRD
	DCA QRSIZE

	JMS GETSTR		/ GET REPLACE STRING
	QRMSG2
	RSTRNG
	RSEND-1
	JMP I QREPL

	DCA QRNUM		/ ZERO COUNT
QRA,	JMS SFWDPT		/ START AT POINT
QRB,	JMS SCHSTR		/ LOOK FOR STRING TO REPLACE
	JMP QRX
	JMS GOFWD		/ FOUND, GO THERE
	JMS FIXMRK
	JMS UPDATE

QRC,	JMS RDTTY		/ WHAT TO DO?
	JMS UPPER		/ FOR "N" RESPONSE
	TAD [-CR		/ DONE?
	SNA
	JMP QRX
	TAD (CR-SP		/ REPLACE AND CONTINUE?
	SNA
	JMP QRSP
	TAD (SP-116		/ CONTINUE?
	SNA
	JMP QRNO
	TAD (116-56		/ REPLACE AND QUIT?
	SNA
	JMP QRDOT
	TAD (56-41		/ REPLACE ALL?
	SNA
	JMP QRALL
	TAD [BELL		/ ERROR, TRY AGAIN
	JMS WRTTY
	JMP QRC

QRSP,	JMS QRACT		/ REPLACE AND CONTINUE
	JMP QRX
	JMP QRA

QRNO,	JMS SFWDPT
	TAD [SRCHP		/ CONTINUE
	JMS INC15
	JMP QRB

QRALL,	JMS QRACT		/ REPLACE ALL
	JMP QRX
	JMS SFWDPT
	JMS SCHSTR
	JMP QRX
	JMS GOFWD
	JMS FIXMRK
	JMP QRALL

QRDOT,	JMS QRACT		/ REPLACE AND QUIT
	NOP

QRX,	JMS CLRMLT		/ DONE, SHOW NUMBER OF REPLACEMENTS
	TAD (QRMSG3
	JMS WR6
	WRMLT
	TAD QRNUM
	JMS WRDEC
	WRMLT
	ISZ MLHOLD

	ISZ QREPL
	JMP I QREPL

QRNUM,	0
QRSIZE,	0

QRACT,	0
	CLL			/ DELETE SEARCH STRING
	TAD POINT
	TAD QRSIZE
	DCA POINT	
	SNL
	JMP QRACTA
	TAD POINT+1
	TAD [10
	DCA POINT+1
QRACTA,	JMS FIXMRK

	TAD (RSTRNG		/ INSERT REPLACE STRING
	DCA QRACTP
QRACTB,	TAD I QRACTP
	ISZ QRACTP
	SPA
	JMP QRACTX
	JMS INSERT
	SKP
	JMP QRACTB

	TAD [BELL		/ BUFFER FULL, GIVE UP
	JMS WRTTY
	JMP I QRACT

QRACTX,	CLA
	ISZ QRNUM
	ISZ QRACT
	JMP I QRACT

QRACTP,	0

	PAGE  /-------------------------- 
IOBUF,	ZBLOCK	400
IOBUFE,

$
