/ UPDATE SCREEN, MODE LINE

	PAGE	/------------

/ SCREEN INITIALIZATION
SCINIT,	0
	DCA SCRP
	TAD (-SCRHT
	DCA ROW
	SCRFLD
INITA,	STA
	DCA I SCRP
	TAD SCRP
	TAD (SCRWD
	DCA SCRP
	ISZ ROW
	JMP INITA
	CODFLD

	TAD (CLRSC
	JMS WRSTR
	WRTTY
	JMP I SCINIT

CLRSC,	ESC; "[; "2; "J; 0

RMARK=STA CLL RAL    /-2
RNDBUF=SCRWD^SCRHT   / LOCATION OF RENDER BUFFER

/ WRITE CHAR IN AC TO RENDER BUFFER, UPDATE POINTER AND COL
WRRND,	0
	MQL
	TAD COL
	TAD (-SCRWD+1
	SNA CLA
	JMP I WRRND

	SCRFLD
	CLA MQA
	DCA I RNDP
	CODFLD
	ISZ RNDP
	ISZ COL
	JMP I WRRND

RENDCH,	0
	TAD (-TAB		/ TAB?
	SNA
	JMP RNDTAB

	TAD (TAB-SP		/ CONTROL CHARACTER?
	SPA
	JMP RNDCTL
	
	TAD [SP			/ ORDINARY CHARACTER
	JMS WRRND
	JMP I RENDCH

RNDTAB,	TAD [SP			/ TAB
	JMS WRRND
	TAD COL
	AND (7
	SZA CLA
	JMP RNDTAB
	JMP I RENDCH

RNDCTL,	TAD [SP			/ CONTROL CHAR
	DCA RNDTMP
	TAD ("^
	JMS WRRND
	TAD RNDTMP
	TAD ["@
	JMS WRRND
	JMP I RENDCH

/ INIT TO RENDER
RNDINI,	0
	DCA COL
	TAD (RNDBUF
	DCA RNDP
	JMP I RNDINI

/ END RENDER LINE
RNDEND,	0
	RMARK			/ MARK END (-2)
	SCRFLD
	DCA I RNDP
	CODFLD
	JMP I RNDEND

/ RENDER CURRENT LINE OF TEXT BUFFER TO RENDER BUFFER
RENDER,	0
	JMS RNDINI
	
RNDA,	TAD (BUFP		/ SKIP OVER GAP?
	MQL
	TAD [GAP
	JMS SNE15
	JMP RNDGAP
	
RNDB,	TAD (BUFP		/ END OF BUFFER?
	MQL
	TAD [BUFEND
	JMS SNE15
	JMP RNDNLA
	
	TAD (BUFP		/ NO, GET CHARACTER
	JMS GET15
	TAD [-NL		/ END OF LINE?
	SNA
	JMP RNDNL

	TAD [NL			/ NO, RENDER CHARACTER
	JMS RENDCH
	JMP RNDNXT
	
RNDGAP,	TAD POINT		/ SKIP OVER GAP
	DCA BUFP
	TAD POINT+1
	DCA BUFP+1
	TAD ROW			/ SAVE CURSOR POSITION
	DCA CURROW
	TAD COL
	DCA CURCOL
	JMP RNDB

RNDNL,	TAD (BUFP		/ NEW LINE, SKIP OVER NL
	JMS INC15
RNDNLA,	JMS RNDEND
	JMP I RENDER

RNDNXT,	TAD (BUFP		/ NEXT CHAR
	JMS INC15
	JMP RNDA

RNDTMP,	0

	PAGE  /------------------

/ WRITE RENDERED LINE TO SCREEN
WRSCR,	0
	TAD ROW
	MQL
	MUY; SCRWD
	CLA MQA
	DCA SCRP	
	DCA COL
	DCA WRFLAG
	TAD (RNDBUF
	DCA RNDP
	SCRFLD

WRSCRA,	TAD I RNDP		/ SCAN FOR MISMATCH
	CIA   			/ END OF LINE IS ALWAYS A MISMATCH
	TAD I SCRP
	SZA CLA
	JMP WRSCRB
	ISZ COL
	ISZ RNDP
	ISZ SCRP
	JMP WRSCRA

WRSCRB,	TAD I RNDP		/ END OF BOTH?
	AND I SCRP
	CODFLD
	SPA CLA
	JMP I WRSCR		/ YES, DONE
	JMS SETCUR		/ NO, SET CURSOR TO BEGIN FIXING

WRSCRD,	SCRFLD
	TAD I SCRP		/ END OF SCREEN LINE?
	SPA CLA
	ISZ WRFLAG		/ YES, SET FLAG
	TAD I RNDP		/ END OF RENDERED LINE?
	SPA
	JMP WRSCRC
	DCA I SCRP		/ NO, UPDATE SCREEN
	TAD I RNDP
	CODFLD
	JMS WRTTY
	ISZ COL
	ISZ RNDP
	ISZ SCRP
	JMP WRSCRD

WRSCRC,	STA			/ END OF RENDERED LINE, MARK SCREEN
	DCA I SCRP
	CODFLD
	TAD WRFLAG		/ CLEAR TO END OF LINE IF NECESSARY
	SZA CLA
	JMP I WRSCR
	TAD (CLREOL
	JMS WRSTR
	WRTTY
	JMP I WRSCR

CLREOL,	ESC; "[; "K; 0
WRFLAG,	0

/ UPDATE SCREEN
UPDATE, 0
	JMS SETTOS
	DCA SCRP
	DCA ROW
	TAD TOS
	DCA BUFP
	TAD TOS+1
	DCA BUFP+1

UPDA,	JMS RENDER		/ RENDER AND WRITE TEXT BUFFER
	JMS WRSCR
	ISZ ROW
	TAD ROW
	TAD [-TXTHT		/ LEAVE ROOM FOR STATUS LINES
	SZA CLA
	JMP UPDA

	JMS RMODE		/ RENDER AND WRITE MODE LINE
	JMS WRSCR
	ISZ ROW
	JMS RNDMLT
	JMS WRSCR
	ISZ ROW

	TAD CURROW		/ SET CURSOR AT POINT
	DCA ROW
	TAD CURCOL
	DCA COL
	JMS SETCUR

	JMP I UPDATE

/ SET SCREEN CURSOR USING ROW, COL
SETCUR,	0
	TAD [ESC
	JMS WRTTY
	TAD ("[
	JMS WRTTY
	TAD ROW
	IAC
	JMS WRDEC
	WRTTY
	TAD (";
	JMS WRTTY
	TAD COL
	IAC
	JMS WRDEC
	WRTTY
	TAD ("H
	JMS WRTTY
	JMP I SETCUR

	PAGE  /--------------------------

/ RENDER MODE LINE
RMODE,	0
	JMS RNDINI		/ BASE MODE LINE
	TAD (MLBASE
	JMS WR6
	WRRND
	JMS RNDEND	

	TAD CHANGD		/ INDICATE BUFFER CHANGED
	SNA CLA
	JMP RMODEB
	TAD (RNDBUF+1
	DCA RNDP
	TAD (CHGMSG
	JMS WR6
	WRRND

RMODEB,	TAD (RNDBUF+5		/ FILE NAME
	DCA RNDP
	TAD FILENM+3		/ SAVE EXTENSION
	DCA RMODET
	DCA FILENM+3
	TAD (FILENM
	JMS WR6
	WRRND
	TAD (".
	JMS WRRND
	TAD RMODET
	DCA FILENM+3
	TAD (FILENM+3
	JMS WR6
	WRRND

	JMS BUFSIZ		/ BUFFER SIZE
	TAD (RNDBUF+23
	DCA RNDP
	TAD AC24
	MQL
	TAD AC24+1
	SCRFLD

RMODEA,	DVI; 12
	TAD ["0
	DCA I RNDP
	STA
	TAD RNDP
	DCA RNDP
	MQA
	SZA CLA
	JMP RMODEA

	CODFLD
	JMP I RMODE
	
RMODET,	0
MLBASE,	TEXT /----                /
CHGMSG,	TEXT /**/

	PAGE  /--------------------------

BUFSIZ,	0
	TAD [BUFEND
	JMS LD24
	TAD [BUF
	JMS SUB24
	TAD [POINT
	JMS SUB24
	TAD [GAP
	JMS ADD24
	JMS FIX24
	JMP I BUFSIZ

P24,	0

CLR24,	0
	DCA AC24
	DCA AC24+1
	JMP I CLR24

LD24,	0
	DCA P24
	TAD I P24
	DCA AC24
	ISZ P24
	TAD I P24
	DCA AC24+1
	JMP I LD24

ST24,	0
	DCA P24
	TAD AC24
	DCA I P24
	ISZ P24
	TAD AC24+1
	DCA I P24
	JMP I ST24

ADD24,	0
	DCA P24
	CLL
	TAD AC24
	TAD I P24
	DCA AC24
	ISZ P24
	RAL
	TAD AC24+1
	TAD I P24
	DCA AC24+1
	JMP I ADD24

SUB24,	0
	DCA P24
	TAD I P24
	CLL CIA
	TAD AC24
	DCA AC24
	ISZ P24
	TAD I P24
	CMA
	SZL
	IAC
	TAD AC24+1
	DCA AC24+1
	JMP I SUB24

/ FIX AC24 FOR 15-BIT POINTER SUBTRACTIONS
FIX24,	0
	TAD AC24+1
	ASR; 2
	DCA AC24+1
	JMP I FIX24
