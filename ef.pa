/ MARK PROCESSING

	PAGE  /--------------------------

/ KEEP MARK IN LEGAL POSITION AS POINT CROSSES MARK
FIXMRK,	0
	TAD MKFLAG
	SZA CLA
	JMP FXMKA

	TAD [MARK		/ MARK AT OR BEFORE GAP?
	JMS LD24
	TAD [GAP
	JMS SUB24
	TAD AC24+1
	SPA CLA
	JMP FXMKX		/ YES, ALL SET

	TAD [POINT		/ NO, FIX IT
	JMS ADD24
	TAD AC24
	DCA MARK
	TAD AC24+1
	DCA MARK+1
	ISZ MKFLAG

	TAD [BUFEND		/ BEYOND END OF BUFFER?
	JMS LD24
	TAD [MARK
	JMS SUB24
	TAD AC24+1
	SMA CLA
	JMP FXMKX
	
	TAD BUFEND		/ YES, SET TO END
	DCA MARK
	TAD BUFEND+1
	DCA MARK+1
	JMP FXMKX

FXMKA,	TAD [MARK		/ MARK AT OR AFTER POINT?
	JMS LD24
	TAD [POINT
	JMS SUB24
	TAD AC24+1
	SMA CLA
	JMP FXMKX		/ YES, ALL SET

	TAD [GAP		/ NO, FIX IT
	JMS ADD24
	TAD AC24
	DCA MARK
	TAD AC24+1
	DCA MARK+1
	DCA MKFLAG

	TAD [MARK		/ BEYOND BEGINNING OF BUFFER?
	JMS LD24
	TAD [BUF
	JMS SUB24
	TAD AC24+1
	SMA CLA
	JMP FXMKX

	TAD BUF			/ YES, SET TO BEGINNING
	DCA MARK
	TAD BUF+1
	DCA MARK+1

FXMKX,	JMP I FIXMRK

/ SET MARK TO POINT
SETPM,	0
	TAD POINT
	DCA MARK
	TAD POINT+1
	DCA MARK+1
	CLA IAC
	DCA MKFLAG
	JMP I SETPM	

/ SET MARK TO POINT COMMAND
SETMRK,	0
	JMS SETPM
	TAD (MRKMSG
	JMS WR6
	WRMLT
	ISZ MLHOLD

	ISZ SETMRK
	JMP I SETMRK

MRKMSG,	TEXT /MARK SET/

/ EXCHANGE POINT AND MARK
EXGPM,	0
	ISZ EXGPM

	TAD MARK		/ GET SET TO MOVE POINT TO MARK
	DCA SRCHP
	TAD MARK+1
	DCA SRCHP+1

	TAD MKFLAG		/ WHICH DIRECTION?
	SZA CLA
	JMP EXGPMA

	TAD POINT		/ REVERSE
	DCA MARK
	TAD POINT+1
	DCA MARK+1
	JMS GOREV
	ISZ MKFLAG
	JMP I EXGPM	

EXGPMA,	TAD GAP
	DCA MARK
	TAD GAP+1
	DCA MARK+1
	JMS GOFWD		/ FORWARD
	DCA MKFLAG
	JMP I EXGPM

	PAGE  /--------------------------

/ DELETE AND SAVE REGION
DELREG,	0
	JMS WRREG
	JMP I DELREG
	ISZ DELREG
	STA
	DCA CHANGD
	
	TAD MKFLAG
	SZA CLA
	JMP DLRGA

	TAD MARK
	DCA GAP
	TAD MARK+1
	DCA GAP+1
	JMP I DELREG

DLRGA,	TAD MARK
	DCA POINT
	TAD MARK+1
	DCA POINT+1
	JMP I DELREG

/ WRITE REGION
WRREG,	0
	TAD MKFLAG
	SZA CLA
	JMP WRREGA

	TAD [MARK		/ MARK BEFORE GAP, NULL REGION?
	MQL
	TAD [GAP
	JMS SNE15
	JMP WRREGN

	TAD [MARK		/ NO, WRITE BEFORE GAP
	DCA WRBEG
	TAD [POINT
	DCA WREND
	JMP WRREGB

WRREGA,	TAD [MARK		/ MARK AFTER POINT, NULL REGION?
	MQL
	TAD [POINT
	JMS SNE15
	JMP WRREGN

	TAD [GAP		/ NO, WRITE AFTER POINT
	DCA WRBEG
	TAD [MARK
	DCA WREND

WRREGB,	TAD (TEMPFN
	DCA WRNAME
	JMS WRITEF
	SKP
	ISZ WRREG
	JMP I WRREG

WRREGN,	TAD (NRMSG
	JMS WR6
	WRMLT
	ISZ MLHOLD
	JMP I WRREG

NRMSG,	TEXT /NO REGION/
TEMPFN,	FILENAME CLIP.E8

/ INSERT SAVED REGION
YANK,	0
	TAD (TEMPFN		/ LOOK FOR IT
	JMS LUFILE
	JMP I YANK
	JMS INSFIL		/ INSERT
	SKP
	ISZ YANK
	JMP I YANK

/ IF BUFFER FILLED WHEN READING, READ MORE
RDMORE,	0
	TAD MOREOK
	SNA CLA
	JMP I RDMORE

	STA
	TAD FILBLK
	DCA FILLOC
	JMS CLRBUF
	JMP I RDMORE
	JMS INSFIL
	NOP
	ISZ RDMORE
	JMP I RDMORE

	PAGE  /--------------------------

/ INCREMENTAL SEARCH

/ LOOK FOR THE <0-TERMINATED SEARCH STRING. START AT SRCHP,
/ UPDATE AND SKIP IF FOUND. IF NOT FOUND SRCHP IS UNDEFINED
SCHSTR,	0
SCSTC,	TAD (SSTRNG
	DCA SCSTP

	TAD I SCSTP		/ NULL SEARCH STRING IS FOUND
	SPA CLA
	JMP SCSTB

	TAD I SCSTP		/ FIND FIRST CHAR OF STRING
	JMS SFWD
	JMP I SCHSTR

	TAD SRCHP
	DCA SCSTQ
	TAD SRCHP+1
	DCA SCSTQ+1

SCSTA,	ISZ SCSTP		/ ADVANCE POINTERS
	TAD (SCSTQ
	JMS INC15

	TAD I SCSTP		/ DONE?
	SPA CLA
	JMP SCSTB

	TAD (SCSTQ		/ END OF BUFFER?
	MQL
	TAD [BUFEND
	JMS SNE15
	JMP I SCHSTR

	TAD (SCSTQ		/ NO, COMPARE
	JMS GET15
	CIA
	TAD I SCSTP
	SNA CLA
	JMP SCSTA		/ MATCH, KEEP GOING
	
	TAD [SRCHP		/ NO MATCH, FIND NEXT PLACE TO LOOK
	JMS INC15
	JMP SCSTC

SCSTB,	ISZ SCHSTR		/ FOUND
	JMP I SCHSTR

SCSTP,	0
SCSTQ,	0; 0

	PAGE  /--------------------------

ISRCH,	0
	ISZ ISRCH
	JMS CLRMLT
	TAD (ISMSG
	JMS WR6
	WRMLT

	TAD (SSTRNG
	DCA ISP
	JMS SETPM
ISD,	STA
	DCA I ISP

ISA,	JMS UPDATE
	JMS SFWDPT		/ START FROM POINT

ISC,	JMS RDTTY
	TAD [-BS		/ BACKSPACE?
	SNA
	JMP ISBS
	TAD (BS-6		/ ^F?
	SNA
	JMP ISNXT
	TAD (6-CR		/ CR?
	SNA
	JMP I ISRCH		/ CR, DONE
	TAD [CR			/ REGULAR CHAR
	DCA ISCH		/ SAVE IT

	TAD ISCH		/ PUT IN SEARCH STRING
	TAD (-16		/ CONVERT ^N TO CR
	SNA
	TAD (CR-16
	TAD (16
	DCA I ISP
	ISZ ISP
	STA			/ MARK END OF SEARCH STRING
	DCA I ISP

ISF,	JMS SCHSTR		/ LOOK FOR IT
	JMP ISNF

	JMS GOFWD		/ FOUND, GO THERE
	JMS FIXMRK
	TAD ISCH		/ ECHO IN MODE LINE	
	JMS WRMLT
	JMP ISA
	
ISBS,	TAD ISP			/ BACKUP. ALREADY AT BEGINNING?
	TAD (-SSTRNG
	SZA CLA
	JMP ISE
	TAD [BELL
	JMS WRTTY
	JMP ISC

ISE,	STA			/ NO, DEC POINTER
	TAD ISP
	DCA ISP
	STA
	DCA I ISP

	JMS EXGPM		/ BACK TO STARTING POINT
	HLT
	JMS SETPM		/ FIND SHORTER STRING
	JMS SFWDPT
	JMS SCHSTR
	HLT			/ MUST BE FOUND
	JMS GOFWD		/ GO THERE
	JMS FIXMRK
	JMS ERMLT		/ ERASE CHAR FROM MODE LINE
	JMP ISA

ISNXT,	TAD [SRCHP		/ FIND NEXT OCCURANCE
	MQL			/ AT END OF BUFFER?
	TAD [BUFEND
	JMS SNE15
	JMP ISB
	TAD [SRCHP		/ NO, ADVANCE 1
	JMS INC15
	JMS SCHSTR		/ FIND
	JMP ISB

	JMS GOFWD		/ GO THERE
	JMS FIXMRK
	JMP ISA
	
ISB,	TAD [BELL		/ NOT FOUND
	JMS WRTTY
	JMP ISA

ISNF,	TAD [BELL		/ NOT FOUND
	JMS WRTTY
	STA			/ REMOVE CHAR FROM SEARCH STRING
	TAD ISP
	DCA ISP
	JMP ISD
	
ISCH,	0
ISP,	0

ISMSG,	TEXT /SEARCH: /

	PAGE  /--------------------------
SSTRNG,
IOBUF,	ZBLOCK	400
IOBUFE,

$
