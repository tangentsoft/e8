/#ED# FILE INPUT

/ OS/8 USER SERVICE ROUTINE DEFS
USR=7700
FETCH=1
LOOKUP=2
ENTER=3
CLOSE=4

/ FIND FILE
FFILE,	0
	JMS GETFIL		/ GET FILENAME
	JMP I FFILE

	JMS CLRBUF		/ GOT ONE, CLEAR BUFFER
	JMP I FFILE		/ USER ABORTED SAVE OFFER

	JMS SETFN		/ ACTIVE FILENAME = ENTERED NAME

	TAD (FILEEN		/ LOOKUP FILE
	JMS LUFILE
	JMP FFNEW

	JMS INSFIL		/ EXISTS, INSERT
	JMP FFERR
FFILEA,	DCA CHANGD		/ SET BUFFER NOT CHANGED
	JMS GOBEG		/ BEGINNING OF FILE
	FAIL
	ISZ FFILE
	JMP I FFILE

FFNEW,	JMS CLRMLT		/ FILE NOT FOUND, NEW ONE
	TAD (NEWMSG
	JMS WR6
	WRMLT
	ISZ MLHOLD
	JMP FFILEA

FFERR,	JMS CLRFN		/ ERROR (BUFFER FULL) DON'T LET
	JMP I FFILE		/ USER ACCIDENTALLY WRITE PARTIAL FILE

/ INSERT FILE AT POINT
INFILE,	0
	JMS GETFIL		/ GET FILENAME
	JMP I INFILE
	TAD (FILEEN		/ LOOK FOR IT
	JMS LUFILE
	JMP INFLN
	JMS INSFIL		/ INSERT
	SKP
	ISZ INFILE
	JMP I INFILE

INFLN,	TAD (NFMSG		/ FILE MUST BE FOUND
	JMS WR6
	WRMLT
	ISZ MLHOLD
	JMP I INFILE

/ CLEAR BUFFER, SKIP IF NOT QUIT
CLRBUF,	0
	JMS OFFER
	JMP I CLRBUF
	ISZ CLRBUF
	
	TAD BUF
	DCA GAP
	TAD BUF+1
	DCA GAP+1
	TAD BUFEND
	DCA POINT
	TAD BUFEND+1
	DCA POINT+1
	JMP I CLRBUF

/ CONVERT CHAR IN AC TO UPPER CASE, A LITTLE TOO AGRESSIVELY SINCE
/ THE SYMBOLS >= 140 ARE ALSO AFFECTED
UPPER,	0
	TAD (-140
	SPA
	TAD (40
	TAD (100
	JMP I UPPER

	PAGE  /-------------------------- 3200

/ INSERT ONE CHAR, SKIP IF NOT ^Z AND THE CHAR FITS. IGNORE LF
INSF1,	0
	TAD (-32		/ ^Z?
	SNA
	JMP I INSF1
	TAD (32-LF		/ LF?
	SNA
	JMP INSF1A
	TAD [LF
	JMS INSERT		/ OK TO INSERT
	JMP INSF1B
INSF1A,	ISZ INSF1
	JMP I INSF1
INSF1B,	ISZ MOREOK
	JMP I INSF1

MOREOK,	0			/ BUFFER FULL, MORE TO READ

/ CLEAR ACTIVE FILENAME
CLRFN,	0
	DCA FILENM
	DCA FILENM+3
	JMP I CLRFN

/ SKIP IF THERE IS AN ACTIVE FILENAME
HAVEFN,	0
	TAD FILENM
	SZA CLA
	ISZ HAVEFN
	JMP I HAVEFN

/ INSERT PREVIOUSLY LOOKED UP FILE AT POINT, SKIP IF OK
INSFIL,	0
	TAD FILLOC
	DCA FILBLK
	DCA MOREOK
	
INSFA,	JMS I DSKEP		/ NEXT BLOCK
	200
FILBUF,	IOBUF
FILBLK,	0
	JMP INSFER
	ISZ FILBLK		/ UPDATE BLOCK NUMBER

	TAD (-200		/ PROCESS CHARACTERS
	DCA INSFN
	TAD FILBUF
	DCA INSFP

INSFC,	TAD I INSFP		/ CHAR 1
	AND (177
	JMS INSF1
	JMP INSFB

	TAD I INSFP		/ SAVE HIGH NIBBLE OF CHAR 3
	AND (3400
	LSR; 3
	DCA INSFT

	ISZ INSFP		/ CHAR 2
	TAD I INSFP
	AND (177
	JMS INSF1
	JMP INSFB

	TAD I INSFP		/ CHAR 3
	LSR; 7
	TAD INSFT
	JMS INSF1
	JMP INSFB

	ISZ INSFP
	ISZ INSFN
	JMP INSFC
	ISZ FILSIZ
	JMP INSFA

INSFB,	TAD [POINT		/ DISTINGUISH EOF FROM BUFFER FULL
	MQL 			/ EOF SKIPS, BUFFER FULL DOESN'T
	TAD [GAP
	JMS SNE15
	SKP
	ISZ INSFIL
	JMP I INSFIL
	
INSFER,	SMA CLA			/ I/O ERROR, SHOW MESSAGE
	TAD (INSE2-INSE1	/ SHOUDN'T GET NON-FATAL
	TAD (INSE1
	JMS WR6
	WRMLT
	ISZ MLHOLD
	JMP I INSFIL

INSFP,	0
INSFN,	0
INSFT,	0

/ LOOKUP FILE, AC->NAME, SKIP IF FOUND
LUFILE,	0
	DCA FILLOC
	TAD DEVNUM
	CIF 10
	JMS I (USR
	LOOKUP
FILLOC,	0
FILSIZ,	0
	SKP
	ISZ LUFILE
	JMP I LUFILE

/ INITIALIZE FILE I/O, SKIP IF OK
IOINIT,	0
	CIF 10			/ FETCH DISK HANDLER
 	JMS I (USR
	FETCH
DEVNUM=.+1
	DEVICE DSK
DEVEP,	7201
	JMP I IOINIT
	TAD DEVEP
	DCA DSKEP
	ISZ IOINIT
	JMP I IOINIT

	PAGE  /-------------------------- 3400

/ GET FILE NAME, SKIP IF NOT QUIT
GETFIL,	0
GETFR,	JMS CLRMLT		/ PROMPT IN MODE LINE TEXT (MLT)
	TAD (GFMSG
	JMS WR6
	WRMLT
	JMS UPDATE

	DCA FILEEN		/ CLEAR NAME TO BE ENTERED
	DCA FILEEN+1
	DCA FILEEN+2
	DCA FILEEN+3
	TAD (FILEEN

	DCA FILEP		/ SEE COMMENTS BELOW
	DCA FILEX
	DCA FILEH

GETFA,	JMS RDTTY		/ READ NEXT CHAR
	DCA GETFCH
	TAD GETFCH		/ QUIT?
	TAD (-BELL
	SNA CLA
	JMP I GETFIL
	
GETFE,	TAD GETFCH
	TAD (-CR		/ END OF ENTRY?
	SNA CLA
	JMP GETFB

	TAD GETFCH		/ ERASE?
	TAD (-10
	SNA CLA
	JMP GETFR

	TAD GETFCH		/ DOT?
	TAD (-56
	SZA CLA
	JMP GETFD

	TAD FILEX		/ YES DOT, IN EXTENSION MODE?
	SZA CLA
	JMP GETFER
	TAD FILEEN		/ NO, ANY NAME CHARACTERS?
	SNA CLA
	JMP GETFER
	ISZ FILEX		/ YES, OK TO SWITCH TO EXTENSION MODE
	TAD (FILEEN+3
	DCA FILEP
	DCA FILEH
	JMP GETFC

GETFD,	TAD FILEX		/ NOT DOT, TOO MANY CHARACTERS?
	SZA CLA
	JMP .+3
	TAD FILEEN+2
	SKP
	TAD FILEEN+3	
	AND (77
	SZA CLA
	JMP GETFER

	TAD GETFCH		/ CONVERT TO UPPERCASE
	JMS UPPER
	DCA GETFCH

	TAD GETFCH		/ ALPHANUMERIC?
	JMS SKIPAN
	JMP GETFER
	TAD FILEH		/ CHAR OK, INSERT IN FILENAME
	SZA CLA
	JMP GETFG
	
	MQL			/ LEFT HALF
	TAD GETFCH
	SHL; 5
	DCA I FILEP
	ISZ FILEH
	JMP GETFC

GETFG,	TAD GETFCH		/ RIGHT HALF
	AND (77			
	TAD I FILEP
	DCA I FILEP
	DCA FILEH
	ISZ FILEP

GETFC,	TAD GETFCH
	JMS WRMLT
	JMS UPDATE
	JMP GETFA

GETFER,	TAD (BELL		/ ERROR, IGNORE CHARACTER
	JMS WRTTY
	JMP GETFA

GETFB,	TAD FILEEN		/ GOT CR, ANY NAME ENTERED?
	SNA CLA
	JMP GETFER

	
	ISZ GETFIL
	JMP I GETFIL

/ MAKE ENTERED FILENAME CURRENT
SETFN,	0
	TAD FILEEN
	DCA FILENM
	TAD FILEEN+1
	DCA FILENM+1
	TAD FILEEN+2
	DCA FILENM+2
	TAD FILEEN+3
	DCA FILENM+3
	JMP I SETFN

GETFCH,	0			/ CHARACTER BEING ENTERED
FILEP,	0			/ POINTER INTO FILEEN
FILEX,	0			/ NON-ZERO IF WORKING ON FILE EXTENSION
FILEH,	0			/ NON-ZERO IF INSERTING INTO RIGHT HALF
FILEEN,	ZBLOCK 4		/ ENTER NEW NAME HERE

FILENM,	ZBLOCK 5		/ FILE OF CURRENT BUFFER, DISPLAYED IN MODE LINE
	       			/ ONE EXTRA FOR RMODE
/#EE# FILE OUTPUT

	PAGE  /-------------------------- 3600

/ COUNT NL CHARS FROM POINT TO WREND ADD RESULT TO WRFSIZ
NLFWD,	0
	JMS SFWDPT
NLFWDA,	TAD [NL			/ NEXT NL
	JMS SFWD
	JMP I NLFWD
	TAD [SRCHP		/ SRCHP < WREND?
	JMS LD24
	TAD WREND
	JMS SUB24
	TAD AC24+1
	SMA CLA
	JMP I NLFWD
	TAD (WRFSIZ		/ YES, ADD 1
	JMS LD24
	TAD (WRF1
	JMS ADD24
	TAD (WRFSIZ
	JMS ST24
	TAD [SRCHP		/ SKIP OVER NL
	JMS INC15
	JMP NLFWDA

/ COUNT NL CHARS FROM GAP TO WRBEG ADD RESULT TO WRFSIZ
NLREV,	0
	JMS SREVGP
NLREVA,	TAD [NL			/ NEXT NL
	JMS SREV
	JMP I NLREV
	TAD (SRCHP		/ SRCHP >= WRBEG?
	JMS LD24
	TAD WRBEG
	JMS SUB24
	TAD AC24+1
	SPA CLA
	JMP I NLREV
	TAD (WRFSIZ		/ YES, ADD 1
	JMS LD24
	TAD (WRF1
	JMS ADD24
	TAD (WRFSIZ
	JMS ST24
	JMP NLREVA

/ COMPUTE SIZE OF ZONE IN OS/8 BLOCKS (256 WORDS)
WRFBLK,	0
	TAD [GAP		/ NUM CHARS IN ZONE
	JMS LD24
	TAD WRBEG
	JMS SUB24
	TAD WREND
	JMS ADD24
	TAD [POINT
	JMS SUB24
	JMS FIX24
	TAD (WRFSIZ
	JMS ST24
	
	JMS NLFWD		/ ADD EXTRA FOR NL CHARS
	JMS NLREV
	TAD (WRFSIZ		/ AND ONE MORE FOR ^Z
	JMS LD24

	TAD (WRF3		/ (AC24 + 3) / 3 * 2
	JMS ADD24		/ +3: 1 FOR ^Z, 2 TO ROUND UP FOR PACK
	TAD AC24+1		/ THE *2 IS DONE WITH 1 LESS SHIFT LATER
	MQL
	DVI; 3
	SWP
	DCA AC24+1
	TAD AC24
	SWP
	DVI; 3
	CLA MQA
	DCA AC24

	TAD (WRF127		/ COMPUTE BLOCK COUNT
	JMS ADD24
	TAD AC24
	MQL
	TAD AC24+1
	LSR; 6
	CLA MQA
	DCA WRSIZE
	
	JMP I WRFBLK

WRFSIZ,	0; 0	/ SIZE OF ZONE INCLUDING EXTRA NL CHARS AND ^Z AT END
WRF1,	1; 0
WRF3,	3; 0
WRF127,	177; 0	/ FOR ROUNDING UP BLOCK SIZE

/ ENTER TENTATIVE OUTPUT FILE, SKIP IF OK. AC CONTAINS
/ NUMBER OF 256-WORD BLOCKS TO BE WRITTEN. INITIALIZE
/ SOME CLFILE AND PACK VARIABLES
ENFILE,	0
	TAD WRNAME
	DCA ENLOC
	TAD WRSIZE
	CLL IAC RTL		/ ONE MORE TO BE SAFE
	RTL
	TAD DEVNUM
	CIF 10
	JMS I (USR
	ENTER
ENLOC,	0
ENSIZ,	0
	JMP I ENFILE
	TAD ENLOC
	DCA PACKBL
	DCA CLSIZ
	ISZ ENFILE
	JMP I ENFILE

	PAGE  /-------------------------- 4000

/ CLOSE OUTPUT FILE AND MAKE PERMANENT, SKIP IF OK.
CLFILE,	0
	TAD WRNAME
	DCA CLNAME
	TAD DEVNUM
	CIF 10
	JMS I (USR
	CLOSE
CLNAME,	0
CLSIZ,	0
	SKP
	ISZ CLFILE
	JMP I CLFILE

/ PACK CHARACTERS INTO IOBUF. IF FULL, WRITE IT OUT. SKIP IF OK.
/ THREE CHARS IN TWO WORDS, OS/8 ASCII FILE FORMAT
PACK,	0
	DCA PACKCH
	TAD PACKX
	SZA
	JMP PACKA
	TAD PACKCH		/ CHAR 0
	DCA PACK0
	ISZ PACKX
	JMP PACKC

PACKA,	SPA CLA
	JMP PACKB
	TAD PACKCH		/ CHAR 1
	DCA PACK1
	STA
	DCA PACKX
	JMP PACKC

PACKB,	MQL			/ CHAR 2
	TAD PACKCH
	AND (360
	SHL; 3
	TAD PACK0
	DCA I PACKP
	ISZ PACKP
	TAD PACKCH
	AND (17
	SHL; 7
	TAD PACK1
	DCA I PACKP
	ISZ PACKP
	DCA PACKX

	TAD PACKP		/ END OF IOBUF?
	TAD (-IOBUFE
	SZA CLA
	JMP PACKC

	ISZ ENSIZ		/ OVERWRITE BUG?
	SKP
	JMP I PACK

	JMS I DSKEP		/ YES, WRITE BLOCK
	4200  			/ WRITE 1 BLOCK
PACKIO,	IOBUF
PACKBL,	0
	JMP I PACK
	ISZ PACKBL		/ UPDATE BLOCK NUMBER
	ISZ CLSIZ		/ UPDATE FILE SIZE

	TAD PACKIO		/ RESET POINTER
	DCA PACKP

PACKC,	ISZ PACK
	JMP I PACK

PACKCH,	0	/ CHAR TO PACK
PACKX,	0	/ TRISTATE: 0 CHAR 1, 1 CHAR 2, -1 CHAR 3
PACK0,	0	/ PACKED WORD 0
PACK1,	0	/ PACKED WORD 1
PACKP,	0	/ -> PLACE IN IOBUF

/ SAVE FILE COMMAND. 
SVFILE,	0
	TAD [BUF		/ WRBEG = BUF
	DCA WRBEG
	TAD [BUFEND		/ WREND = BUFEND
	DCA WREND
	TAD (FILENM		/ WRITE TO ACTIVE FILE
	DCA WRNAME
	
	JMS HAVEFN		/ HAVE ACTIVE FILE?
	SKP
	JMP SVFLA
	JMS GETFIL		/ NO, GET FILENAME
	JMP I SVFILE		/ USER QUITS
	JMS SETFN		/ SET ACTIVE FILE

SVFLA,	JMS WRITEF		/ WRITE THE FILE
	JMP I SVFILE

	DCA CHANGD		/ BUFFER NOT CHANGED

	TAD WRSIZE		/ DIAGNOSTIC DISPLAY OF PREDICTED
	JMS WRDEC		/ AND ACTUAL NUMBER OF BLOCKS WRITTEN
	WRMLT
	TAD (",
	JMS WRMLT
	TAD CLSIZ
	JMS WRDEC
	WRMLT
	ISZ MLHOLD
	
	ISZ SVFILE
	JMP I SVFILE

/ WRITE BUFFER TO NEW FILE NAME
WRFILE,	0
	JMS CLRFN
	JMS SVFILE
	SKP
	ISZ WRFILE
	JMP I WRFILE

	PAGE  /-------------------------- 4200

/ WRITE ZONE WRBEG,WREND TO FILE WRNAME. SKIP IF OK
WRITEF,	0
	TAD PACKIO		/ INITIALIZE PACK
	DCA PACKP
	DCA PACKX

	JMS WRFBLK		/ GET FILE SIZE
	JMS ENFILE		/ ENTER TENTATIVE FILE
	JMP NOENTR

	TAD I WRBEG		/ SRCHP = WRBEG
	DCA SRCHP
	ISZ WRBEG
	TAD I WRBEG
	DCA SRCHP+1
	STA
	TAD WRBEG
	DCA WRBEG

WRFLA,	TAD [GAP		/ SKIP OVER GAP?
	MQL
	TAD [SRCHP
	JMS SNE15
	JMP WRFLGP

WRFLF,	TAD [SRCHP		/ AT END OF ZONE?
	MQL
	TAD WREND
	JMS SNE15
	JMP WRFLEZ

	TAD [SRCHP		/ WRITE NEXT CHARACTER
	JMS GET15
	TAD [-NL
	SNA
	JMP WRFNL
	TAD [NL
	JMS PACK
	JMP NOPACK
	JMP WRFLB
	
WRFNL,	TAD [CR			/ WRITE NEW LINE
	JMS PACK
	JMP NOPACK
	TAD [LF
	JMS PACK
	JMP NOPACK

WRFLB,	TAD [SRCHP		/ NEXT CHARACTER
	JMS INC15
	JMP WRFLA

WRFLGP,	TAD POINT		/ SKIP OVER GAP
	DCA SRCHP
	TAD POINT+1
	DCA SRCHP+1
	JMP WRFLF

WRFLEZ,	TAD (32			/ WRITE ^Z
	JMS PACK
	JMP NOPACK
WRFLC,	TAD PACKP		/ ZERO REST OF IOBUF AND WRITE IT
	TAD (-IOBUF
	SNA CLA
	JMP WRFLD
	JMS PACK
	JMP NOPACK
	JMP WRFLC

WRFLD,	JMS CLFILE		/ CLOSE FILE
	JMP NOCLOS
	ISZ WRITEF
	JMP I WRITEF

NOENTR,	TAD (NOEMSG
	JMP WRFLE

NOPACK,	DCA CLSIZ		/ ATTEMPT TO DELETE FILE
	JMS CLFILE
	NOP
	TAD (NOPMSG
	JMP WRFLE

NOCLOS,	TAD (NOCMSG	
WRFLE,	JMS WR6
	WRMLT
	ISZ MLHOLD
	JMP I WRITEF

/ OFFER TO SAVE CHANGED FILE
OFFER,	0
	TAD CHANGD
	SNA CLA
	JMP OFFERN

	JMS CLRMLT		/ CHANGED, PROMPT FOR OPTION
	TAD (SAVMSG
	JMS WR6
	WRMLT
	JMS UPDATE

OFFERA,	JMS RDTTY
	TAD (-131		/ Y? ("Y HAS PARITY BIT SET)
	SNA
	JMP OFFERY
	TAD (131-116		/ N?
	SNA
	JMP OFFERN
	TAD (116-BELL		/ ^G?
	SNA CLA
	JMP I OFFER
	TAD [BELL		/ YES, QUIT RETURN
	JMS WRTTY
	JMP OFFERA

OFFERY,	JMS SVFILE		/ Y, SAVE FILE
	SKP
OFFERN,	ISZ OFFER
	JMP I OFFER

	PAGE  /-------------------------- 4400

/ KEEP MARK IN LEGAL POSITION AS POINT CROSSES MARK
FIXMRK,	0
	TAD MKFLAG
	SZA CLA
	JMP FXMKA

	TAD [MARK		/ MARK AT OR BEFORE GAP?
	JMS LD24
	TAD [GAP
	JMS SUB24
	TAD AC24+1
	SPA CLA
	JMP FXMKX		/ YES, ALL SET

	TAD [POINT		/ NO, FIX IT
	JMS ADD24
	TAD AC24
	DCA MARK
	TAD AC24+1
	DCA MARK+1
	ISZ MKFLAG

	TAD [BUFEND		/ BEYOND END OF BUFFER?
	JMS LD24
	TAD [MARK
	JMS SUB24
	TAD AC24+1
	SMA CLA
	JMP FXMKX
	
	TAD BUFEND		/ YES, SET TO END
	DCA MARK
	TAD BUFEND+1
	DCA MARK+1
	JMP FXMKX

FXMKA,	TAD [MARK		/ MARK AT OR AFTER POINT?
	JMS LD24
	TAD [POINT
	JMS SUB24
	TAD AC24+1
	SMA CLA
	JMP FXMKX		/ YES, ALL SET

	TAD [GAP		/ NO, FIX IT
	JMS ADD24
	TAD AC24
	DCA MARK
	TAD AC24+1
	DCA MARK+1
	DCA MKFLAG

	TAD [MARK		/ BEYOND BEGINNING OF BUFFER?
	JMS LD24
	TAD [BUF
	JMS SUB24
	TAD AC24+1
	SMA CLA
	JMP FXMKX

	TAD BUF			/ YES, SET TO BEGINNING
	DCA MARK
	TAD BUF+1
	DCA MARK+1

FXMKX,	JMP I FIXMRK

/ SET MARK TO POINT
SETPM,	0
	TAD POINT
	DCA MARK
	TAD POINT+1
	DCA MARK+1
	CLA IAC
	DCA MKFLAG
	JMP I SETPM	

/ SET MARK TO POINT COMMAND
SETMRK,	0
	JMS SETPM
	TAD (MRKMSG
	JMS WR6
	WRMLT
	ISZ MLHOLD

	ISZ SETMRK
	JMP I SETMRK

/ EXCHANGE POINT AND MARK
EXGPM,	0
	ISZ EXGPM

	TAD MARK		/ GET SET TO MOVE POINT TO MARK
	DCA SRCHP
	TAD MARK+1
	DCA SRCHP+1

	TAD MKFLAG		/ WHICH DIRECTION?
	SZA CLA
	JMP EXGPMA

	TAD POINT		/ REVERSE
	DCA MARK
	TAD POINT+1
	DCA MARK+1
	JMS GOREV
	ISZ MKFLAG
	JMP I EXGPM	

EXGPMA,	TAD GAP
	DCA MARK
	TAD GAP+1
	DCA MARK+1
	JMS GOFWD		/ FORWARD
	DCA MKFLAG
	JMP I EXGPM

